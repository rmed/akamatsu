"""Initial database structure and basic data

Revision ID: 2e68dbfc7374
Revises: None
Create Date: 2016-06-18 14:41:57.424184

"""

# revision identifiers, used by Alembic.
revision = '2e68dbfc7374'
down_revision = None

from datetime import datetime
from alembic import op
import sqlalchemy as sa
import os


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('mini', sa.String(length=50), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('custom_head', sa.Text(), nullable=True),
    sa.Column('ghost', sa.String(length=512), nullable=True),
    sa.Column('base_route', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('route', sa.String(length=512), nullable=False),
    sa.Column('is_root', sa.Boolean(), nullable=True),
    sa.Column('is_html', sa.Boolean(), nullable=True),
    sa.Column('use_layout_header', sa.Boolean(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('comments_enabled', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('route')
    )

    roles_table = op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )

    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )

    users_table = op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('reset_password_token', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('personal_bio', sa.String(length=1024), nullable=True),
    sa.Column('notify_login', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )

    op.create_table('waffleconfs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )

    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('ghost', sa.String(length=512), nullable=True),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('comments_enabled', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )

    op.create_table('uploads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(length=512), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('path')
    )

    user_roles_table = op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('post_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], )
    )

    # Create default admin user
    op.bulk_insert(
        users_table,
        [{
            'id': 1,
            'username': 'admin',
            'password': 'changeme',
            'reset_password_token': 'changeme',
            'email': os.getenv('AKAMATSU_EMAIL') or 'admin@example.com',
            'confirmed_at': datetime.now(),
            'is_enabled': True,
            'first_name': 'Admin',
            'last_name': 'McAdmin',
            'personal_bio': '',
            'notify_login': False
        }]
    )

    # Insert default roles
    op.bulk_insert(
        roles_table,
        [
            {'id': 1, 'name': 'admin'},
            {'id': 2, 'name': 'blogger'},
            {'id': 3, 'name': 'editor'},
            {'id': 4, 'name': 'uploader'},
        ]
    )

    # Set admin role
    op.bulk_insert(
        user_roles_table,
        [{
            'id': 1,
            'user_id': 1,
            'role_id': 1
        }]
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_tags')
    op.drop_table('user_roles')
    op.drop_table('posts')
    op.drop_table('waffleconfs')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('roles')
    op.drop_table('pages')
    ### end Alembic commands ###
